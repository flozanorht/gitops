pipeline {
    triggers {
        pollSCM ('H/5 * * * *')
    }
    options {
        buildDiscarder (logRotator (numToKeepStr: '10', artifactNumToKeepStr: '10'))
        disableConcurrentBuilds()
    }
    agent {
      node {
        label 'nodejs'
      }
    }
    stages {
        stage ('Validate resources') {
            steps {
                script {
                    openshift.verbose()
                    openshift.withCluster () {
                        openshift.verbose()
                        openshift.logLevel(1)
                        //XXX will require openshift.raw() to use apply with kustomize?
                        openshift.apply ('--dry-run -k config')
                    }
                }
            }
        }
        stage ('Apply resources') {
            when {
                branch 'master'
            }
            steps {
                sh 'awk -F: \'{ print $1 }\' config/idp-localusers-data'
                script {
                    openshift.withCluster () {
                        openshift.verbose()
                        openshift.logLevel(1)
                        //XXX will require openshift.raw() to use apply with kustomize?
                        openshift.apply ('--dry-run -k config')
                    }
                }
            }
        }
        stage ('Verify test user') {
            when {
                branch 'master'
            }
            steps {
                //XXX Rewrite using the DSL?
                sh 'oc login -u testuser -p redhat123 --insecure-skip-tls-verify https://kubernetes.default.svc:443'
                sh 'oc new-project test-testuser || true'
            }
        }
    }
}